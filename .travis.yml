language: php

dist: trusty

php:
  - 7.2

addons:
  firefox: latest
  chrome: stable

env:
  global:
    - SELENIUM_SERVER_VERSION="3.14.0"
    - CHROMEDRIVER_VERSION="2.36"
    - GECKODRIVER_VERSION="0.19.1"
  matrix:
    - BROWSER=firefox
    - BROWSER=chrome

matrix:
  include:
    - php: 7.2
      env: BROWSER=microsoftedge LOCAL=true localIdentifier=BROWSERSTACK_LOCAL_IDENTIFIER # run tests in MicrosoftEdge on SauceLabs cloud
      install:
        - composer install --no-interaction
      before_script: ~
      script:
        - ./vendor/bin/steward run production chrome -vvv
      after_script: ~
    - php: 7.2
      env: BROWSER=firefox LOCAL=true localIdentifier=BROWSERSTACK_LOCAL_IDENTIFIER # run tests in Firefox on SauceLabs cloud
      install:
        - composer install --no-interaction # This is actually composer update, because composer.lock is temporarily removed from the repo
      before_script: ~
      script:
        - ./vendor/bin/steward run production chrome -vvv
      after_script: ~
  allow_failures:
    - env: BROWSER=firefox

install:
  - composer install --no-interaction # Install Steward and its dependencies
  - composer require lmc/steward
  - ./vendor/bin/steward install
  - if [ "$BROWSER" = "chrome" ]; then mkdir chromedriver; wget -q -t 3 https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip; unzip chromedriver_linux64 -d chromedriver; fi
  - if [ "$BROWSER" = "chrome" ]; then export CHROMEDRIVER_PATH=./chromedriver/chromedriver; fi
  - if [ "$BROWSER" = "firefox" ]; then mkdir geckodriver; wget -q -t 3 https://github.com/mozilla/geckodriver/releases/download/v$GECKODRIVER_VERSION/geckodriver-v$GECKODRIVER_VERSION-linux64.tar.gz; tar -xzf geckodriver-v$GECKODRIVER_VERSION-linux64.tar.gz -C geckodriver; fi
  - if [ "$BROWSER" = "firefox" ]; then export GECKODRIVER_PATH=./geckodriver/geckodriver; fi

before_script:
  - java -jar ./vendor/bin/selenium-server-standalone-3.14.0.jar
  - until $(echo | nc localhost 4444); do sleep 1; echo Waiting for selenium-server to start...; done;

  # Start one Selenium node for headless Chrome
  - if [ "$BROWSER" = "chrome" ]; then java -Dwebdriver.chrome.driver="$CHROMEDRIVER_PATH" -jar ./vendor/bin/selenium-server-standalone-3.14.0.jar -role node -port 8910 -log selenium-node-1.log -enablePassThrough false & fi

  # Start Firefox on first Selenium node
  - if [ "$BROWSER" = "firefox" ]; then Xvfb :99 -nolisten tcp -ac -screen 0 1280x1024x24 & fi
  - if [ "$BROWSER" = "firefox" ]; then export DISPLAY=:99.0; fi
  - if [ "$BROWSER" = "firefox" ]; then java -Dwebdriver.gecko.driver="$GECKODRIVER_PATH" -jar ./vendor/bin/selenium-server-standalone-3.14.0.jar -role node -port 8910 -maxSession 1 -log selenium-node-1.log -enablePassThrough false & fi

  # Start Firefox on second Selenium node
  - if [ "$BROWSER" = "firefox" ]; then Xvfb :98 -nolisten tcp -ac -screen 0 1280x1024x24 & fi
  - if [ "$BROWSER" = "firefox" ]; then export DISPLAY=:98.0; fi
  - if [ "$BROWSER" = "firefox" ]; then java -Dwebdriver.gecko.driver="$GECKODRIVER_PATH" -jar ./vendor/bin/selenium-server-standalone-3.14.0.jar -role node -port 8911 -maxSession 1 -log selenium-node-2.log -enablePassThrough false  & fi

  - sleep 3 # wait until browsers starts

script:
  - ./vendor/bin/steward run production $BROWSER -vvv # Run the tests in $BROWSER and specify `production` as an environment name

after_script:
  - ./vendor/bin/steward results -vvv
  - cat selenium-server.log
  - cat selenium-node-1.log
  - cat selenium-node-2.log